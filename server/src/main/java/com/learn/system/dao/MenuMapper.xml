<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.learn.system.dao.MenuMapper">
    <resultMap id="BaseResultMap" type="com.learn.system.model.entity.Menu">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="component" property="component" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="iconCls" property="iconCls" jdbcType="VARCHAR"/>
        <result column="parentId" property="parentId" jdbcType="VARCHAR"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
    </resultMap>

    <resultMap id="menuDto" type="com.learn.system.model.dto.MenuDTO">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="component" property="component" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <!--        <result column="iconCls" property="iconCls" jdbcType="VARCHAR"/>-->
        <result column="parentId" property="parentId" jdbcType="VARCHAR"/>
        <result column="isLeaf" property="isLeaf" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="MenuDto_Column_List">
        id, url, path, component, name, parentId, isLeaf
    </sql>

    <resultMap id="Menus2" type="com.learn.system.model.entity.Menu" extends="BaseResultMap">
        <collection property="children" ofType="com.learn.system.model.entity.Menu">
            <id column="id2" property="id" jdbcType="INTEGER"/>
            <result column="url2" property="url" jdbcType="VARCHAR"/>
            <result column="path2" property="path" jdbcType="VARCHAR"/>
            <result column="component2" property="component" jdbcType="VARCHAR"/>
            <result column="name2" property="name" jdbcType="VARCHAR"/>
            <result column="iconCls2" property="iconCls" jdbcType="VARCHAR"/>
            <result column="parentId2" property="parentId" jdbcType="INTEGER"/>
            <result column="enabled2" property="enabled" jdbcType="BIT"/>
        </collection>
    </resultMap>
    <resultMap id="MenuWithRole" type="com.learn.system.model.entity.Menu" extends="BaseResultMap">
        <collection property="roles" ofType="com.learn.system.model.entity.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
        </collection>
    </resultMap>
    <resultMap id="MenuWithChildren" type="com.learn.system.model.entity.Menu" extends="BaseResultMap">
        <id column="id1" property="id"/>
        <result column="name1" property="name"/>
        <collection property="children" ofType="com.learn.system.model.entity.Menu">
            <id column="id2" property="id"/>
            <result column="name2" property="name"/>
            <collection property="children" ofType="com.learn.system.model.entity.Menu">
                <id column="id3" property="id"/>
                <result column="name3" property="name"/>
            </collection>
        </collection>
    </resultMap>
    <select id="getMidsByRid" resultType="java.lang.Integer">
    select mid from menu_role where rid=#{rid};
  </select>

    <select id="getAllMenusWithRole" resultMap="MenuWithRole">
    select m.*,r.`id` as rid,r.`name` as rname from menu m,menu_role mr,role r where m.`id`=mr.`menu_id` and mr.`role_id`=r.`id` order by m.`id`
    </select>

    <select id="getMenusByUserId" resultMap="Menus2">
    select distinct m1.*,m2.`id` as id2,m2.`component` as component2,m2.`enabled` as enabled2,m2.`iconCls` as iconCls2,m2.`name` as name2,m2.`parentId` as parentId2,m2.`path` as path2 from menu m1,menu m2,user_role user,menu_role mr where m1.`id`=m2.`parentId` and user.`userid`=#{userid} and user.`rid`=mr.`role_id` and mr.`menu_id`=m2.`id` and m2.`enabled`=true order by m1.`id`,m2.`id`
    </select>

    <select id="getTotal" parameterType="com.learn.system.model.entity.Menu" resultType="java.lang.Long">
        select count(*) from menu m
        <where>
            <if test="menu!=null">
                <if test="menu.name != null and menu.name!=''">
                    name = #{menu.name,jdbcType=VARCHAR}
                </if>
                <if test="menu.parentId != null and menu.parentId!=''">
                    parentId = #{menu.parentId,jdbcType=VARCHAR}
                </if>
            </if>
        </where>
    </select>

    <select id="getMenuByFilter" resultMap="menuDto">
        select
        <include refid="MenuDto_Column_List"/>
        from menu
        <where>
            <if test="menu!=null">
                <if test="menu.name != null and menu.name!=''">
                    name = #{menu.name,jdbcType=VARCHAR}
                </if>
                <if test="menu.parentId != null and menu.parentId!=''">
                    parentId = #{menu.parentId,jdbcType=VARCHAR}
                </if>
            </if>
        </where>
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>

    <select id="getAllMenus" resultMap="menuDto">
        select
        <include refid="MenuDto_Column_List"/>
        from menu m where enabled = 1 and id != 1
    </select>

    <update id="delMenu" parameterType="java.lang.String">
        update menu set enabled = 0
    </update>

    <insert id="insert" parameterType="com.learn.system.model.entity.Menu">
        insert into menu (id, url, path,
          component, name, parentId, isLeaf, enabled)
        values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
          #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER},
          #{isLeaf,jdbcType=INTEGER}, #{enabled,jdbcType=BIT})
    </insert>

</mapper>